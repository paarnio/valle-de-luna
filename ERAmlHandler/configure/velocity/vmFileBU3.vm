<rdf:RDF xmlns="http://siima.net/ontologies/2017/caex/" 
	xml:base="http://siima.net/ontologies/2017/caex/"
	xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
	xmlns:owl="http://www.w3.org/2002/07/owl#"
    xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#"
	xmlns:xsd="http://www.w3.org/2001/XMLSchema#"
	xmlns:siima="http://siima.net/ontologies/2017/caex/"
	xmlns:amlont="http://data.ifs.tuwien.ac.at/aml/ontology#">
	#* NOTE: VelocityContext is expected to be initiated with  JAXB object CAEXFile caex
	 with key "caexfile" in the constructor of VeloContainer (vcontext.put("caexfile", caex))
	 2017-06-09 CALLING MY OWN CLASS(AnyTypeValueHelper) METHOD: putVelocityContext("AnyValueHelper", anyContentHelper); 
	 Helper method for finding out Attributes Value's content: now [Value: null]
	 2017-05-28 FOR STRING FUNCTIONS PUT StringUtils class TO CONTEXT: $StringUtils
	 SEE: https://stackoverflow.com/questions/6998412/velocity-string-function
	 2017-05-29 CALLING MY OWN CLASS(UriHelper) METHOD:putVelocityContext("UriHelper", helper) 
	 SEE: https://stackoverflow.com/questions/20786403/calling-a-java-method-in-velocity-template
	 *#
	
	#set( $amlns = 'http://data.ifs.tuwien.ac.at/aml/ontology#')
	#set( $xsdns = 'http://www.w3.org/2001/XMLSchema#')
	## -- CAEXFile --
	#set( $URIhelp = $UriHelper.createInstanceUri("CAEXFile",null,null,"$caexfile.FileName") )
	<owl:NamedIndividual rdf:about="${URIhelp}">
		<rdf:type rdf:resource="${amlns}CAEXFile"/>
	</owl:NamedIndividual>
	
	## -- InstanceHierarchy --
	#foreach ($ih in $caexfile.getInstanceHierarchy())
	#set( $URIhelp = $UriHelper.createInstanceUri("InstanceHierarchy","$ih.Name",null,"$ih.Name") )
	<owl:NamedIndividual rdf:about="${URIhelp}">
		<rdf:type rdf:resource="${amlns}InstanceHierarchy"/>
	</owl:NamedIndividual>		
    #end
	
	## -- InternalElement --
	#foreach ($ih in $caexfile.getInstanceHierarchy())
       #foreach ($ie in $ih.InternalElement)
			#walkIElements($ie, $ih)
		#end		
    #end

	## --Recursive walk through InternalElements--
	#macro(walkIElements $node $ihierarchy)
	#set( $sucref = $node.RefBaseSystemUnitPath )
	#set( $SUCrep = $StringUtils.replace($sucref,"/","_") )
	#set( $URIhelp = $UriHelper.createInstanceUri("InternalElement","$ihierarchy.Name","$node.Name", "$node.Name") )
	<owl:NamedIndividual rdf:about="${URIhelp}">
		<rdf:type rdf:resource="${amlns}InternalElement"/>
		<amlont:name rdf:datatype="${xsdns}string">$node.Name</amlont:name>
		<amlont:iD rdf:datatype="${xsdns}string">$node.ID</amlont:iD>
		#set( $URIhelp = $UriHelper.createInstanceUri("SystemUnitClass","$ihierarchy.Name","$node.Name", "${SUCrep}") )
		<amlont:refBaseSystemUnitPath rdf:resource="${URIhelp}"/>
		## -- attribute property --
		#foreach ($att in $node.getAttribute())
			#set( $URIhelp = $UriHelper.createInstanceUri("AttributeType","$ihierarchy.Name","$node.Name", "$att.Name") )
			<amlont:attribute rdf:resource="${URIhelp}"/>
		#end
	</owl:NamedIndividual>	
	#if ($node.InternalElement.size() > 0)
		#foreach ($child in $node.InternalElement)
			#walkIElements($child $ihierarchy)
		#end
	#end
	#end
	## -- macro end
	
	## -- Attribute --
	#foreach ($ih in $caexfile.getInstanceHierarchy())
       #foreach ($ie in $ih.InternalElement)
			#walkIElementsForAttributes($ie $ih)
		#end		
    #end
	
	## --Recursive attribute creation from all InternalElements--
	#macro(walkIElementsForAttributes $node $ihierarchy)
		#foreach ($att in $node.getAttribute())
				#set( $ATTValue = $AnyValueHelper.getAnyTypeContent("AttributeType", $att, "Value") )
				#set( $ATTDefValue = $AnyValueHelper.getAnyTypeContent("AttributeType", $att, "DefaultValue") )
				#set( $URIhelp = $UriHelper.createInstanceUri("AttributeType","$ihierarchy.Name","$node.Name", "$att.Name") )
				<owl:NamedIndividual rdf:about="${URIhelp}">
				<rdf:type rdf:resource="${amlns}Attribute"/>
					<amlont:name rdf:datatype="${xsdns}string">$att.Name</amlont:name>
					<amlont:attributeDataType rdf:datatype="${xsdns}string">$att.AttributeDataType</amlont:attributeDataType>
					#if ($ATTDefValue)
						<amlont:defaultValue rdf:datatype="${xsdns}string">$ATTDefValue</amlont:defaultValue>
					#end
					<amlont:value rdf:datatype="${xsdns}string">$ATTValue</amlont:value>
				</owl:NamedIndividual>
		#end
	#if ($node.InternalElement.size() > 0)
		#foreach ($child in $node.InternalElement)
			#walkIElementsForAttributes($child $ihierarchy)
		#end
	#end	
	#end
	## -- macro end
	
	## -- ExternalInterface --
	#foreach ($ih in $caexfile.getInstanceHierarchy())
       #foreach ($ie in $ih.InternalElement)
			#walkIElementsForEInterface($ie $ih)
		#end		
    #end
	
	## --Recursive ExternalInterface creation from all InternalElements--
	#macro(walkIElementsForEInterface $node $ihierarchy)
		#foreach ($extint in $node.getExternalInterface())
				
				#set( $URIhelp = $UriHelper.createInstanceUri("ExternalInterface","$ihierarchy.Name","$node.Name", "$extint.Name") )
				<owl:NamedIndividual rdf:about="${URIhelp}">
				<rdf:type rdf:resource="${amlns}ExternalInterface"/>
					<amlont:name rdf:datatype="${xsdns}string">$extint.Name</amlont:name>
				</owl:NamedIndividual>
		#end
	#if ($node.InternalElement.size() > 0)
		#foreach ($child in $node.InternalElement)
			#walkIElementsForEInterface($child $ihierarchy)
		#end
	#end	
	#end
	## -- macro end
	
	
</rdf:RDF>