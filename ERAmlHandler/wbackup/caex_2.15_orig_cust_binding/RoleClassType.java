//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.10 in JDK 6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.05.10 at 04:40:43 ip. EEST 
//


package siima.models.jaxb.caex;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.bind.annotation.XmlType;


/**
 * Shall be used for RoleClass definition, provides base structures for a role class definition.
 * 
 * <p>Java class for RoleClassType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="RoleClassType">
 *   &lt;complexContent>
 *     &lt;extension base="{}CAEXObject">
 *       &lt;sequence minOccurs="0">
 *         &lt;element name="Attribute" type="{}AttributeType" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="ExternalInterface" maxOccurs="unbounded" minOccurs="0">
 *           &lt;complexType>
 *             &lt;complexContent>
 *               &lt;extension base="{}InterfaceClassType">
 *               &lt;/extension>
 *             &lt;/complexContent>
 *           &lt;/complexType>
 *         &lt;/element>
 *       &lt;/sequence>
 *       &lt;attribute name="RefBaseClassPath" type="{http://www.w3.org/2001/XMLSchema}string" />
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "RoleClassType", propOrder = {
    "attribute",
    "externalInterface"
})
@XmlSeeAlso({
    RoleFamilyType.class
})
public class RoleClassType
    extends CAEXObject
{

    @XmlElement(name = "Attribute")
    protected List<AttributeType> attribute;
    @XmlElement(name = "ExternalInterface")
    protected List<RoleClassType.ExternalInterface> externalInterface;
    @XmlAttribute(name = "RefBaseClassPath")
    protected String refBaseClassPath;

    /**
     * Gets the value of the attribute property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the attribute property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getAttribute().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link AttributeType }
     * 
     * 
     */
    public List<AttributeType> getAttribute() {
        if (attribute == null) {
            attribute = new ArrayList<AttributeType>();
        }
        return this.attribute;
    }

    public boolean isSetAttribute() {
        return ((this.attribute!= null)&&(!this.attribute.isEmpty()));
    }

    public void unsetAttribute() {
        this.attribute = null;
    }

    /**
     * Gets the value of the externalInterface property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the externalInterface property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getExternalInterface().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link RoleClassType.ExternalInterface }
     * 
     * 
     */
    public List<RoleClassType.ExternalInterface> getExternalInterface() {
        if (externalInterface == null) {
            externalInterface = new ArrayList<RoleClassType.ExternalInterface>();
        }
        return this.externalInterface;
    }

    public boolean isSetExternalInterface() {
        return ((this.externalInterface!= null)&&(!this.externalInterface.isEmpty()));
    }

    public void unsetExternalInterface() {
        this.externalInterface = null;
    }

    /**
     * Gets the value of the refBaseClassPath property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getRefBaseClassPath() {
        return refBaseClassPath;
    }

    /**
     * Sets the value of the refBaseClassPath property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setRefBaseClassPath(String value) {
        this.refBaseClassPath = value;
    }

    public boolean isSetRefBaseClassPath() {
        return (this.refBaseClassPath!= null);
    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType>
     *   &lt;complexContent>
     *     &lt;extension base="{}InterfaceClassType">
     *     &lt;/extension>
     *   &lt;/complexContent>
     * &lt;/complexType>
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "")
    public static class ExternalInterface
        extends InterfaceClassType
    {


    }

}
