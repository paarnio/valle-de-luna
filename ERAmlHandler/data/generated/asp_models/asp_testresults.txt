<?xml version='1.0' encoding='UTF-8'?>
<aspmodels>
<model num='1'>
<literal predicate='connected' atom='connected(leg1, leg2)' negative='false'>
	<arg num='0'>leg1</arg>
	<arg num='1'>leg2</arg>
</literal><literal predicate='connected' atom='connected(leg2, leg1)' negative='false'>
	<arg num='0'>leg2</arg>
	<arg num='1'>leg1</arg>
</literal><literal predicate='connected' atom='connected(leg2, leg3)' negative='false'>
	<arg num='0'>leg2</arg>
	<arg num='1'>leg3</arg>
</literal><literal predicate='connected' atom='connected(leg3, leg2)' negative='false'>
	<arg num='0'>leg3</arg>
	<arg num='1'>leg2</arg>
</literal><literal predicate='connected' atom='connected(leg3, leg4)' negative='false'>
	<arg num='0'>leg3</arg>
	<arg num='1'>leg4</arg>
</literal><literal predicate='connected' atom='connected(leg4, leg3)' negative='false'>
	<arg num='0'>leg4</arg>
	<arg num='1'>leg3</arg>
</literal><literal predicate='connected' atom='connected(leg4, leg5)' negative='false'>
	<arg num='0'>leg4</arg>
	<arg num='1'>leg5</arg>
</literal><literal predicate='connected' atom='connected(leg5, leg4)' negative='false'>
	<arg num='0'>leg5</arg>
	<arg num='1'>leg4</arg>
</literal><literal predicate='connected' atom='connected(leg5, leg6)' negative='false'>
	<arg num='0'>leg5</arg>
	<arg num='1'>leg6</arg>
</literal><literal predicate='connected' atom='connected(leg6, leg5)' negative='false'>
	<arg num='0'>leg6</arg>
	<arg num='1'>leg5</arg>
</literal><literal predicate='connected' atom='connected(leg6, leg7)' negative='false'>
	<arg num='0'>leg6</arg>
	<arg num='1'>leg7</arg>
</literal><literal predicate='connected' atom='connected(leg7, leg6)' negative='false'>
	<arg num='0'>leg7</arg>
	<arg num='1'>leg6</arg>
</literal><literal predicate='mainbranch' atom='mainbranch(leg1)' negative='false'>
	<arg num='0'>leg1</arg>
</literal><literal predicate='mainbranch' atom='mainbranch(leg2)' negative='false'>
	<arg num='0'>leg2</arg>
</literal><literal predicate='mainbranch' atom='mainbranch(leg3)' negative='false'>
	<arg num='0'>leg3</arg>
</literal><literal predicate='mainbranch' atom='mainbranch(leg4)' negative='false'>
	<arg num='0'>leg4</arg>
</literal><literal predicate='mainbranch' atom='mainbranch(leg5)' negative='false'>
	<arg num='0'>leg5</arg>
</literal><literal predicate='hasint' atom='hasint(leg1, bot1)' negative='false'>
	<arg num='0'>leg1</arg>
	<arg num='1'>bot1</arg>
</literal><literal predicate='hasint' atom='hasint(leg1, top1)' negative='false'>
	<arg num='0'>leg1</arg>
	<arg num='1'>top1</arg>
</literal><literal predicate='hasint' atom='hasint(leg2, bot2)' negative='false'>
	<arg num='0'>leg2</arg>
	<arg num='1'>bot2</arg>
</literal><literal predicate='hasint' atom='hasint(leg2, top2)' negative='false'>
	<arg num='0'>leg2</arg>
	<arg num='1'>top2</arg>
</literal><literal predicate='hasint' atom='hasint(leg3, bot3)' negative='false'>
	<arg num='0'>leg3</arg>
	<arg num='1'>bot3</arg>
</literal><literal predicate='hasint' atom='hasint(leg3, top3)' negative='false'>
	<arg num='0'>leg3</arg>
	<arg num='1'>top3</arg>
</literal><literal predicate='hasint' atom='hasint(leg4, bot4)' negative='false'>
	<arg num='0'>leg4</arg>
	<arg num='1'>bot4</arg>
</literal><literal predicate='hasint' atom='hasint(leg4, top4)' negative='false'>
	<arg num='0'>leg4</arg>
	<arg num='1'>top4</arg>
</literal><literal predicate='hasint' atom='hasint(leg5, bot5)' negative='false'>
	<arg num='0'>leg5</arg>
	<arg num='1'>bot5</arg>
</literal><literal predicate='hasint' atom='hasint(leg5, top5)' negative='false'>
	<arg num='0'>leg5</arg>
	<arg num='1'>top5</arg>
</literal><literal predicate='hasint' atom='hasint(leg5, top5b)' negative='false'>
	<arg num='0'>leg5</arg>
	<arg num='1'>top5b</arg>
</literal><literal predicate='hasint' atom='hasint(leg5, bot5b)' negative='false'>
	<arg num='0'>leg5</arg>
	<arg num='1'>bot5b</arg>
</literal><literal predicate='hasint' atom='hasint(leg6, bot6)' negative='false'>
	<arg num='0'>leg6</arg>
	<arg num='1'>bot6</arg>
</literal><literal predicate='hasint' atom='hasint(leg6, top6)' negative='false'>
	<arg num='0'>leg6</arg>
	<arg num='1'>top6</arg>
</literal><literal predicate='hasint' atom='hasint(leg7, bot7)' negative='false'>
	<arg num='0'>leg7</arg>
	<arg num='1'>bot7</arg>
</literal><literal predicate='hasint' atom='hasint(leg7, top7)' negative='false'>
	<arg num='0'>leg7</arg>
	<arg num='1'>top7</arg>
</literal><literal predicate='topi' atom='topi(top1)' negative='false'>
	<arg num='0'>top1</arg>
</literal><literal predicate='topi' atom='topi(top2)' negative='false'>
	<arg num='0'>top2</arg>
</literal><literal predicate='topi' atom='topi(top3)' negative='false'>
	<arg num='0'>top3</arg>
</literal><literal predicate='topi' atom='topi(top4)' negative='false'>
	<arg num='0'>top4</arg>
</literal><literal predicate='topi' atom='topi(top5)' negative='false'>
	<arg num='0'>top5</arg>
</literal><literal predicate='topi' atom='topi(top6)' negative='false'>
	<arg num='0'>top6</arg>
</literal><literal predicate='topi' atom='topi(top7)' negative='false'>
	<arg num='0'>top7</arg>
</literal><literal predicate='topi' atom='topi(top5b)' negative='false'>
	<arg num='0'>top5b</arg>
</literal><literal predicate='lego' atom='lego(leg1)' negative='false'>
	<arg num='0'>leg1</arg>
</literal><literal predicate='lego' atom='lego(leg2)' negative='false'>
	<arg num='0'>leg2</arg>
</literal><literal predicate='lego' atom='lego(leg3)' negative='false'>
	<arg num='0'>leg3</arg>
</literal><literal predicate='lego' atom='lego(leg4)' negative='false'>
	<arg num='0'>leg4</arg>
</literal><literal predicate='lego' atom='lego(leg5)' negative='false'>
	<arg num='0'>leg5</arg>
</literal><literal predicate='lego' atom='lego(leg6)' negative='false'>
	<arg num='0'>leg6</arg>
</literal><literal predicate='lego' atom='lego(leg7)' negative='false'>
	<arg num='0'>leg7</arg>
</literal><literal predicate='level' atom='level(leg1, 1)' negative='false'>
	<arg num='0'>leg1</arg>
	<arg num='1'>1</arg>
</literal><literal predicate='level' atom='level(leg2, 2)' negative='false'>
	<arg num='0'>leg2</arg>
	<arg num='1'>2</arg>
</literal><literal predicate='level' atom='level(leg3, 3)' negative='false'>
	<arg num='0'>leg3</arg>
	<arg num='1'>3</arg>
</literal><literal predicate='level' atom='level(leg4, 4)' negative='false'>
	<arg num='0'>leg4</arg>
	<arg num='1'>4</arg>
</literal><literal predicate='level' atom='level(leg5, 5)' negative='false'>
	<arg num='0'>leg5</arg>
	<arg num='1'>5</arg>
</literal><literal predicate='level' atom='level(leg6, 4)' negative='false'>
	<arg num='0'>leg6</arg>
	<arg num='1'>4</arg>
</literal><literal predicate='level' atom='level(leg7, 3)' negative='false'>
	<arg num='0'>leg7</arg>
	<arg num='1'>3</arg>
</literal><literal predicate='approaching' atom='-approaching(train)' negative='true'>
	<arg num='0'>train</arg>
</literal><literal predicate='link' atom='link(top1, bot2)' negative='false'>
	<arg num='0'>top1</arg>
	<arg num='1'>bot2</arg>
</literal><literal predicate='link' atom='link(top2, bot3)' negative='false'>
	<arg num='0'>top2</arg>
	<arg num='1'>bot3</arg>
</literal><literal predicate='link' atom='link(top3, bot4)' negative='false'>
	<arg num='0'>top3</arg>
	<arg num='1'>bot4</arg>
</literal><literal predicate='link' atom='link(top4, bot5)' negative='false'>
	<arg num='0'>top4</arg>
	<arg num='1'>bot5</arg>
</literal><literal predicate='link' atom='link(top6, bot5b)' negative='false'>
	<arg num='0'>top6</arg>
	<arg num='1'>bot5b</arg>
</literal><literal predicate='link' atom='link(top7, bot6)' negative='false'>
	<arg num='0'>top7</arg>
	<arg num='1'>bot6</arg>
</literal><literal predicate='bottomi' atom='bottomi(bot1)' negative='false'>
	<arg num='0'>bot1</arg>
</literal><literal predicate='bottomi' atom='bottomi(bot2)' negative='false'>
	<arg num='0'>bot2</arg>
</literal><literal predicate='bottomi' atom='bottomi(bot3)' negative='false'>
	<arg num='0'>bot3</arg>
</literal><literal predicate='bottomi' atom='bottomi(bot4)' negative='false'>
	<arg num='0'>bot4</arg>
</literal><literal predicate='bottomi' atom='bottomi(bot5)' negative='false'>
	<arg num='0'>bot5</arg>
</literal><literal predicate='bottomi' atom='bottomi(bot6)' negative='false'>
	<arg num='0'>bot6</arg>
</literal><literal predicate='bottomi' atom='bottomi(bot7)' negative='false'>
	<arg num='0'>bot7</arg>
</literal><literal predicate='bottomi' atom='bottomi(bot5b)' negative='false'>
	<arg num='0'>bot5b</arg>
</literal><literal predicate='subbranch' atom='subbranch(leg6)' negative='false'>
	<arg num='0'>leg6</arg>
</literal><literal predicate='subbranch' atom='subbranch(leg7)' negative='false'>
	<arg num='0'>leg7</arg>
</literal><literal predicate='interface' atom='interface(bot1)' negative='false'>
	<arg num='0'>bot1</arg>
</literal><literal predicate='interface' atom='interface(bot2)' negative='false'>
	<arg num='0'>bot2</arg>
</literal><literal predicate='interface' atom='interface(bot3)' negative='false'>
	<arg num='0'>bot3</arg>
</literal><literal predicate='interface' atom='interface(bot4)' negative='false'>
	<arg num='0'>bot4</arg>
</literal><literal predicate='interface' atom='interface(bot5)' negative='false'>
	<arg num='0'>bot5</arg>
</literal><literal predicate='interface' atom='interface(top1)' negative='false'>
	<arg num='0'>top1</arg>
</literal><literal predicate='interface' atom='interface(top2)' negative='false'>
	<arg num='0'>top2</arg>
</literal><literal predicate='interface' atom='interface(top3)' negative='false'>
	<arg num='0'>top3</arg>
</literal><literal predicate='interface' atom='interface(top4)' negative='false'>
	<arg num='0'>top4</arg>
</literal><literal predicate='interface' atom='interface(top5)' negative='false'>
	<arg num='0'>top5</arg>
</literal><literal predicate='interface' atom='interface(bot6)' negative='false'>
	<arg num='0'>bot6</arg>
</literal><literal predicate='interface' atom='interface(bot7)' negative='false'>
	<arg num='0'>bot7</arg>
</literal><literal predicate='interface' atom='interface(top6)' negative='false'>
	<arg num='0'>top6</arg>
</literal><literal predicate='interface' atom='interface(top7)' negative='false'>
	<arg num='0'>top7</arg>
</literal><literal predicate='interface' atom='interface(top5b)' negative='false'>
	<arg num='0'>top5b</arg>
</literal><literal predicate='interface' atom='interface(bot5b)' negative='false'>
	<arg num='0'>bot5b</arg>
</literal><literal predicate='base' atom='base(leg1)' negative='false'>
	<arg num='0'>leg1</arg>
</literal>
</model>
</aspmodels>
