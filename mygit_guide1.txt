Copied from
http://git-scm.com/book/en/Git-Basics-Getting-a-Git-Repository

Getting a Git Repository
----------------------

You can get a Git project using two main approaches. The first (1) takes an existing project or directory and imports it into Git. The second (2) clones an existing Git repository from another server.

Initializing a Repository in an Existing Directory
-----------------------------------------------

If you’re starting to track an existing project in Git, you need to go to the project’s directory and type

$ git init

git add commands that specify the files you want to track, followed by a commit:

$ git add *.c
$ git add README
$ git commit -m 'initial project version'


----------- 1. step done here -----------

http://git-scm.com/book/en/Git-Basics-Recording-Changes-to-the-Repository

CH.2.2

$ git status
On branch master
nothing to commit, working directory clean


The benchmarks.rb file appears under a section named “Changes not staged for commit” — which means that a file that is tracked has been modified in the working directory but not yet staged. To stage it, 
you run the git add command 
(it’s a multipurpose command — you use it to begin tracking new files, to stage files, and to do other things like marking merge-conflicted files as resolved). 

Let’s run git add now to stage the benchmarks.rb file, and then run git status again:

$ git add benchmarks.rb
$ git status
On branch master
Changes to be committed:
  (use "git reset HEAD <file>..." to unstage)

        new file:   README
        modified:   benchmarks.rb


NOTE: At this point, suppose you remember one little change that you want to make in benchmarks.rb before you commit it. 
If you modify a file after you run git add, you have to run git add again to stage the latest version of the file:

$ git add benchmarks.rb
$ git status



----------- 3. step done here -----------

XXXX
To see what you’ve changed but not yet staged, type git diff with no other arguments:
ZZZZ


----------- 4. step ---------------------

PA: creating a remote repository by browser:

1. logging in at github.com/paarnio
2. helppien kautta create repository valle-de-luna
3. https://github.com/paarnio/valle-de-luna

Web-sivun ohjeet:

Create a new repository on the command line

touch README.md
git init
git add README.md
git commit -m "first commit"
git remote add origin https://github.com/paarnio/valle-de-luna.git
git push -u origin master

Push an existing repository from the command line

git remote add origin https://github.com/paarnio/valle-de-luna.git
git push -u origin master
----

Mutta käytin remote nimenä luna enkä origin:


PA: and then pushing local repository content into remote repository:

C:\Users\Pekka Aarnio\Documents\kokeiluja\my_git_tests\gittest1 [master +1 ~0 -0
 !]> git remote add luna https://github.com/paarnio/valle-de-luna.git
------------------------------------------------------------
C:\Users\Pekka Aarnio\Documents\kokeiluja\my_git_tests\gittest1 [master +1 ~0 -0
 !]> git push -u luna master
----------------------------
Counting objects: 12, done.
Delta compression using up to 4 threads.
Compressing objects: 100% (8/8), done.
Writing objects: 100% (12/12), 1.70 KiB | 0 bytes/s, done.
Total 12 (delta 3), reused 0 (delta 0)
To https://github.com/paarnio/valle-de-luna.git
 * [new branch]      master -> master
Branch master set up to track remote branch master from luna.
C:\Users\Pekka Aarnio\Documents\kokeiluja\my_git_tests\gittest1 [master +1 ~0 -0
 !]>

TOIMIII: Näkyyy webissä:
https://github.com/paarnio/valle-de-luna/blob/master/mygit_guide1.txt

----------------------------------------------------
